services:
  service:
    image: molotov9500/tlas
    restart: unless-stopped
    ports:
      - "8080:${SERVER_PORT}"
    env_file:
      - ./.env
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_DOCKER_PORT}
      YANDEX_API_KEY: ${YANDEX_API_KEY}
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_EXPIRATION: ${JWT_ACCESS_EXPIRATION}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION}
      CORS_ALLOWED_PATTERNS: ${CORS_ALLOWED_PATTERNS}
      REDIS_SSL_ENABLED: ${REDIS_SSL_ENABLED}
    deploy:
      resources:
        limits:
          cpus: 0.75
          memory: 2048M
    networks:
      backend:
    depends_on:
      - postgres
      - redis

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:${REDIS_PORT}"
    env_file:
      - ./.env
    volumes:
      - /etc/letsencrypt/live/tlas-api.ru/fullchain.pem:/etc/fullchain.pem:ro
      - /etc/letsencrypt/live/tlas-api.ru/privkey.pem:/etc/privkey.pem:ro
    networks:
      backend:
    command: [
      "--tls-port ${REDIS_PORT}",
      "--port ${REDIS_DOCKER_PORT}",
      "--maxmemory-policy allkeys-lru",
      "--maxmemory 512mb",
      "--requirepass ${REDIS_PASSWORD}",
      "--tls-cert-file /etc/fullchain.pem",
      "--tls-key-file /etc/privkey.pem",
      "--tls-ca-cert-file /etc/fullchain.pem",
      "--tls-auth-clients no"
    ]
    deploy:
      resources:
        limits:
          memory: 1024M

  postgres:
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - "5432:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    networks:
      backend:
    deploy:
      resources:
        limits:
          memory: 1024M
    volumes:
      - postgres:/var/lib/postgresql/data
      - /etc/letsencrypt/live/tlas-api.ru/fullchain.pem:/var/lib/postgresql/fullchain.pem:ro
      - /etc/letsencrypt/live/tlas-api.ru/privkey.pem:/var/lib/postgresql/privkey.pem:ro
    command: >
      postgres -c ssl=on
               -c ssl_cert_file='/var/lib/postgresql/fullchain.pem'
               -c ssl_key_file='/var/lib/postgresql/privkey.pem'
               -c listen_addresses='*'
               -c log_connections=on
               -c log_disconnections=on
               -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

volumes:
  postgres:
  redis:

networks:
  backend: